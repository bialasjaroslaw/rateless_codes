name: CMake

env:
  ACTIONS_RUNNER_DEBUG: true
  CTEST_OUTPUT_ON_FAILURE: 1

on:
  push:
    tags:
    branches:
      - master
      - development
  pull_request:
    branches:
      - master
      - development
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-22.04
        compiler:
          - llvm
          - gcc-11
        generator:
          - "Ninja Multi-Config"
        build_type:
          - Release
          - Debug

        include:
          - os: windows-2022
            compiler: msvc
            generator: "Visual Studio 17 2022"
            build_type: Debug

          - os: windows-2022
            compiler: msvc
            generator: "Visual Studio 17 2022"
            build_type: Release

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - uses: seanmiddleditch/gha-setup-ninja@master

    - name: Set up Clang
      if: ${{ matrix.compiler == 'llvm' }}
      uses: egor-tensin/setup-clang@v1
      with:
        version: latest
        platform: x64

    - name: Restore artifacts, or setup vcpkg for building artifacts
      uses: lukka/run-vcpkg@v10
      id: runvcpkg
      with:
        # This one is not needed, as it is the default value anyway.
        # vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgGitCommitId: '8daf70c56ba9581f5251a5d4675eb771b6b34957'
        vcpkgJsonGlob: '**/vcpkg.json'
        appendedCacheKey: 'compiler=${{matrix.compiler}}'

    - name: Run CMake with vcpkg.json manifest
      uses: lukka/run-cmake@v10
      id: runcmake
      with:
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        configurePreset: 'ninja-multi-vcpkg'
        configurePresetAdditionalArgs: '[`-DRATELESS_CODES_ENABLE_TESTS=ON`, `-DUSE_SANITIZERS=ON`]'
        buildPreset: 'ninja-multi-vcpkg'
        buildPresetAdditionalArgs: '[`--config ${{matrix.build_type}}`]'
        testPreset: 'ninja-multi-vcpkg'
        testPresetAdditionalArgs: '[`--config ${{matrix.build_type}}`]'
